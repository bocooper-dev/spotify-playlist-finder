openapi: 3.0.0
info:
  title: Spotify Playlist Discovery API
  version: 1.0.0
  description: API for discovering popular Spotify playlists by genre

servers:
  - url: https://localhost:3000/api
    description: Development server
  - url: https://api.example.com
    description: Production server

paths:
  /spotify/genres:
    get:
      summary: Get available genres
      description: Returns list of valid Spotify genres for searching
      operationId: getGenres
      responses:
        '200':
          description: List of available genres
          content:
            application/json:
              schema:
                type: object
                properties:
                  genres:
                    type: array
                    items:
                      $ref: '#/components/schemas/Genre'
                  total:
                    type: integer
        '500':
          $ref: '#/components/responses/ServerError'

  /spotify/search:
    post:
      summary: Search for playlists
      description: Discover popular playlists matching genre criteria
      operationId: searchPlaylists
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/ServerError'

  /spotify/playlist/{playlistId}:
    get:
      summary: Get playlist details
      description: Retrieve detailed information about a specific playlist
      operationId: getPlaylistDetails
      parameters:
        - name: playlistId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Playlist details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playlist'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /export:
    post:
      summary: Export search results
      description: Export playlist results to CSV or JSON format
      operationId: exportResults
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - format
                - data
              properties:
                format:
                  type: string
                  enum: [csv, json]
                data:
                  $ref: '#/components/schemas/SearchResult'
      responses:
        '200':
          description: Export file
          content:
            text/csv:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                $ref: '#/components/schemas/ExportData'
        '400':
          $ref: '#/components/responses/BadRequest'

components:
  schemas:
    Genre:
      type: object
      required:
        - id
        - name
        - isAvailable
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
        relatedGenres:
          type: array
          items:
            type: string
        isAvailable:
          type: boolean

    SearchRequest:
      type: object
      required:
        - genres
        - minFollowers
      properties:
        genres:
          type: array
          minItems: 1
          maxItems: 10
          items:
            type: string
        minFollowers:
          type: integer
          minimum: 0
          maximum: 1000000

    SearchResult:
      type: object
      required:
        - requestId
        - playlists
        - totalFound
        - searchMetadata
      properties:
        requestId:
          type: string
        playlists:
          type: array
          maxItems: 50
          items:
            $ref: '#/components/schemas/Playlist'
        totalFound:
          type: integer
        searchMetadata:
          $ref: '#/components/schemas/SearchMetadata'
        cachedAt:
          type: string
          format: date-time

    Playlist:
      type: object
      required:
        - id
        - name
        - url
        - followerCount
        - owner
        - genres
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        externalUrl:
          type: string
          format: uri
        imageUrl:
          type: string
          format: uri
          nullable: true
        followerCount:
          type: integer
          minimum: 0
        trackCount:
          type: integer
          minimum: 0
        owner:
          $ref: '#/components/schemas/PlaylistOwner'
        genres:
          type: array
          items:
            type: string
        popularity:
          type: number
        lastUpdated:
          type: string
          format: date-time
        isPublic:
          type: boolean

    PlaylistOwner:
      type: object
      required:
        - id
        - displayName
        - profileUrl
        - contactInfo
      properties:
        id:
          type: string
        displayName:
          type: string
        profileUrl:
          type: string
          format: uri
        imageUrl:
          type: string
          format: uri
          nullable: true
        followerCount:
          type: integer
          nullable: true
        contactInfo:
          $ref: '#/components/schemas/ContactInfo'

    ContactInfo:
      type: object
      required:
        - username
        - profileUrl
        - isContactPublic
        - contactStatus
      properties:
        username:
          type: string
        profileUrl:
          type: string
          format: uri
        isContactPublic:
          type: boolean
        socialLinks:
          type: array
          items:
            $ref: '#/components/schemas/SocialLink'
        contactStatus:
          type: string
          enum: [public, limited, private]

    SocialLink:
      type: object
      required:
        - platform
        - url
        - handle
      properties:
        platform:
          type: string
        url:
          type: string
          format: uri
        handle:
          type: string

    SearchMetadata:
      type: object
      required:
        - executionTime
        - genresSearched
        - apiCallsCount
        - cacheHit
      properties:
        executionTime:
          type: integer
          description: Time in milliseconds
        genresSearched:
          type: array
          items:
            type: string
        genresNotFound:
          type: array
          items:
            type: string
        apiCallsCount:
          type: integer
        cacheHit:
          type: boolean
        warnings:
          type: array
          items:
            type: string

    ExportData:
      type: object
      required:
        - metadata
        - playlists
      properties:
        metadata:
          type: object
          properties:
            exportDate:
              type: string
              format: date-time
            searchCriteria:
              type: object
              properties:
                genres:
                  type: array
                  items:
                    type: string
                minFollowers:
                  type: integer
            totalPlaylists:
              type: integer
        playlists:
          type: array
          items:
            $ref: '#/components/schemas/ExportPlaylist'

    ExportPlaylist:
      type: object
      required:
        - name
        - url
        - followers
        - ownerName
        - ownerProfile
      properties:
        name:
          type: string
        url:
          type: string
        followers:
          type: integer
        tracks:
          type: integer
        ownerName:
          type: string
        ownerProfile:
          type: string
        ownerContact:
          type: string
        genres:
          type: string
        lastUpdated:
          type: string

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object

  responses:
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    RateLimited:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      headers:
        Retry-After:
          schema:
            type: integer
          description: Seconds until rate limit resets

    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'